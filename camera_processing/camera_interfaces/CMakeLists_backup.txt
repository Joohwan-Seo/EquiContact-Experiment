cmake_minimum_required(VERSION 3.8)
project(camera_interfaces)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)

find_package(rosidl_default_generators REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(std_msgs REQUIRED)

rosidl_generate_interfaces(${PROJECT_NAME}
  "srv/Img.srv"
  "srv/PCD.srv"
  "srv/EDF.srv"
  "msg/DiffAction.msg"
  "msg/CompAct.msg"
  "msg/RoboData.msg" 
  "msg/ActActivity.msg"
  DEPENDENCIES
    sensor_msgs
    geometry_msgs
    std_msgs
)

# if you have any tests/linting enabled
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_copyright_FOUND TRUE)    # skip missing LICENSE headers
  set(ament_cmake_cpplint_FOUND TRUE)       # skip cpplint in non-repo
  ament_lint_auto_find_test_dependencies()
endif()

# make sure downstream can see your generated types at runtime
ament_export_dependencies(rosidl_default_runtime)

ament_package()
